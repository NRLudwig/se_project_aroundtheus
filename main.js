!function(){"use strict";class e{constructor(e,t,n){this._title=e.name,this._link=e.link,this._cardSelector=t,this._handleLikeButton=n.handleLike,this._handleDeleteButton=n.handleDelete,this._handleImageClick=n.handleImageClick}_getTemplate(){return this.cardElement=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0),this.cardElement}generateCard(e){return this.cardElement=this._getTemplate(),this.cardElement.querySelector(".card__image").src=this._link,this.cardElement.querySelector(".card__image").alt=this._title,this.cardElement.querySelector(".card__title").textContent=this._title,this._setEventListeners(e),this.cardElement}_setEventListeners(e){e.isLiked?this.cardElement.querySelector(".card__heart-button").classList.add("card__heart-button_active"):this.cardElement.querySelector(".card__heart-button").classList.remove("card__heart-button_active"),this.cardElement.querySelector(".card__heart-button").addEventListener("click",(()=>{this.cardElement.querySelector(".card__heart-button").classList.toggle("card__heart-button_active"),this._handleLikeButton(e)})),this.cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteButton(this.cardElement,e)})),this.cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(e)}))}}class t{constructor(e,t){this.configObj=e,this.formElement=t,this.btn=this.formElement.querySelector(this.configObj.submitBtn),this.inputList=Array.from(this.formElement.querySelectorAll(this.configObj.input))}_setEventListeners(){this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}_checkInputValidity(e){e.validity.valid?this.hideInputError(e):this.showInputError(e)}toggleButtonState(){this.inputList.every((e=>e.validity.valid))?this.btn.disabled=!1:this.btn.disabled=!0}resetValidation(){this.toggleButtonState(),this.inputList.forEach((e=>{this.hideInputError(e)}))}showInputError(e){this.formElement.querySelector(`.${e.id}_error`).textContent=e.validationMessage}hideInputError(e){this.formElement.querySelector(`.${e.id}_error`).textContent=""}enableValidation(){this.formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class n{constructor(e){this._popUpElement=document.querySelector(e),this.closeButton=this._popUpElement.querySelector(".modal__button-close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popUpElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popUpElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.code&&this.close()}setEventListeners(){this._popUpElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&this.close(),e.target.classList.contains("modal__button-close")&&this.close()}))}}class r extends n{constructor(e,t){super(e),this._formInputs=this._popUpElement.querySelectorAll(".modal__text-input"),this.formElement=this._popUpElement.querySelector(".modal__form"),this.formSubmitHandler=t,this._handleSubmitClick=this._handleSubmitClick.bind(this),this._saveButton=this.formElement.querySelector(".modal__button-save")}_handleSubmitClick(e){e.preventDefault(),this.renderSaving(!0);const t=this._getInputValues();this.formSubmitHandler(t),this.close(),this.formElement.reset()}_getInputValues(){return this._inputData={},this._formInputs.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}setEventListeners(){super.setEventListeners(),this.formElement.addEventListener("submit",this._handleSubmitClick)}setDeleteSubmitListener(e,t){super.setEventListeners(),this.formElement.addEventListener("submit",(n=>{n.preventDefault(),this.formSubmitHandler(e,t),this.close(),this.formElement.reset()}))}renderSaving(e){this._saveButton.textContent=e?"Saving...":"Save"}}const s=document.querySelector(".gallery"),o=document.querySelector(".profile__image_wrapper"),a=document.querySelector(".modal__form_profile"),i=document.querySelector(".modal__form_new-place"),l=document.querySelector(".modal__form_change-avatar"),c=document.querySelector(".modal__form_delete"),h=document.querySelector(".modal__text-input_type_name"),d=document.querySelector(".modal__text-input_type_subtitle"),u=document.querySelector(".profile__edit-button"),m=document.querySelector(".profile__add-button"),_={form:".modal__form",input:".modal__text-input",submitBtn:".modal__button-save"},p=new class{constructor(e){this._nameElement=document.querySelector(e.name),this._aboutElement=document.querySelector(e.about),this._avatarElement=document.querySelector(e.avatar)}getUserInfo(){return this._userData={name:this._nameElement.textContent,about:this._aboutElement.textContent},this._userData}setUserInfo(e){this._nameElement.textContent=e.name,this._aboutElement.textContent=e.about}setUserAvatar(e){this._avatarElement.src=e.url}}({name:".profile__name",about:".profile__subtitle",avatar:".profile__image"}),E={handleDelete:function(e,t){I(k),k.setDeleteSubmitListener(e,t)},handleLike:function(e){U.likeCard(e)},handleImageClick:function(e){L.open(e)}},f={setUserInfo:function(e){p.setUserInfo(e)},cardRequest:function(e){$(v,e)},setAvatar:function(e){p.setUserAvatar(e)},renderSavingProfileForm:function(){j.renderSaving(!1)},renderSavingAvatarForm:function(){q.renderSaving(!1)},renderSavingNewCardForm:function(){C.renderSaving(!1)}},v=new class{constructor(e,t){this._gallery=t,this.renderer=e}renderItems(){console.log(items),items.forEach((e=>{this.renderer(this._gallery,e),console.log(e)}))}renderItem(e){this._gallery.prepend(e)}}($,s),b=new t(_,a),g=new t(_,i),S=new t(_,l),y=new t(_,c),k=new r(".modal_delete",(function(e,t){e.remove(),U.deleteCard(t)})),L=new class extends n{constructor(e){super(e),this.imageElement=this._popUpElement.querySelector(".modal-picture__image"),this.titleElement=this._popUpElement.querySelector(".modal-picture__title")}open(e){this.imageElement.src=e.link,this.imageElement.alt=e.name,this.titleElement.textContent=e.name,super.open()}}(".modal_picture"),C=new r(".modal_new-place",(function(e){U.postCard(e)})),j=new r(".modal_profile-edit",(function(e){U.updateUserData(e),p.setUserInfo(e)})),q=new r(".modal_change-avatar",(function(e){U.patchAvatar(e),p.setUserAvatar(e)})),U=new class{constructor(e,t,n){this.baseUrl=e,this.token=t,this.funcObj=n}getUserData(){fetch(`${this.baseUrl}/users/me`,{headers:{authorization:this.token}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.stauts}`))).then((e=>{this.funcObj.setUserInfo(e)})).catch((e=>{console.error(e)}))}updateUserData(e){fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:{authorization:this.token,"content-type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{console.log(e),this.funcObj.renderSavingProfileForm()})).catch((e=>{console.error(e)}))}getInitaialCards(){fetch(`${this.baseUrl}/cards`,{headers:{authorization:this.token}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{e.forEach((e=>{this.funcObj.cardRequest(e)}))})).catch((e=>{console.error(e)}))}postCard(e){fetch(`${this.baseUrl}/cards`,{method:"POST",headers:{authorization:this.token,"content-type":"application/json"},body:JSON.stringify({name:e.title,link:e.link})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{console.log(e),this.funcObj.cardRequest(e),this.funcObj.renderSavingNewCardForm()})).catch((e=>{console.log("this is postCard catch"),console.error(e)}))}deleteCard(e){fetch(`${this.baseUrl}/cards/${e._id}`,{method:"DELETE",headers:{authorization:this.token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then(console.log(`${e.name} id-${e._id} has been deleted`)).catch((e=>{console.error(e)}))}likeCard(e){e.isLiked?fetch(`${this.baseUrl}/cards/${e._id}/likes`,{method:"DELETE",headers:{authorization:this.token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)})):fetch(`${this.baseUrl}/cards/${e._id}/likes`,{method:"PUT",headers:{authorization:this.token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}patchAvatar(e){fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:this.token,"content-type":"application/json"},body:JSON.stringify({avatar:e.url})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{this.funcObj.setAvatar({url:e.avatar}),this.funcObj.renderSavingAvatarForm()})).catch((e=>{console.log(e),console.error(e)}))}getAvatar(){fetch(`${this.baseUrl}/users/me`,{headers:{authorization:this.token,"content-type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{this.funcObj.setAvatar({url:e.avatar})})).catch((e=>{console.error(e)}))}getServerData(){this.getUserData(),this.getAvatar(),this.getInitaialCards()}}("https://around-api.en.tripleten-services.com/v1","84b07c5a-0111-4c47-905f-ba8750f58c8b",f);function I(e){e.open()}function $(t,n){const r=function(t){return new e(t,"#card__template",E).generateCard(t)}(n);t.renderItem(r)}b.enableValidation(),g.enableValidation(),S.enableValidation(),y.enableValidation(),U.getServerData(),C.setEventListeners(),L.setEventListeners(),j.setEventListeners(),q.setEventListeners(),o.addEventListener("click",(function(){I(q),S.toggleButtonState()})),u.addEventListener("click",(function(){const e=p.getUserInfo();h.value=e.name,d.value=e.about,I(j),b.resetValidation()})),m.addEventListener("click",(()=>{I(C),g.toggleButtonState()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,